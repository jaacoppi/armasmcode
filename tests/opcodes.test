#!/bin/sh

# test opcodes. Script returns 0 if there are no errors and 1 if there are errors.
# Acknowledgements / script based on work from Espeak-NG

# Test a command for presence and ability to output the sha1 hash of a file.
check_hashcmd() {
	which $1 &&
	$1 </dev/null 2>/dev/null |
	awk '{if ($1 != "da39a3ee5e6b4b0d3255bfef95601890afd80709") { exit 1; }}'
}

# Test some common commands to find the correct one for the system being tested on.
echo -n "checking for unbuffer ... "
which unbuffer || exit 1

echo -n "checking for disarm64 ... "
which bin/disarm64 || exit 1

echo -n "checking for SHA1 hashing command ... "
if check_hashcmd sha1sum; then
	sha1sum=sha1sum
elif check_hashcmd sha1; then
	sha1sum=sha1
elif check_hashcmd shasum; then
	sha1sum=shasum
else
	echo "no"
	exit 1
fi


test_opcode() {
	TEST_OPCODE=$1
	EXPECTED=$2

	echo "testing ${TEST_OPCODE}"
	unbuffer qemu-aarch64 bin/disarm64 tests/bin/${TEST_OPCODE} | $sha1sum | awk '{ print $1 }' > tests/actual.txt
	echo "${EXPECTED}" > tests/expected.txt
	diff tests/expected.txt tests/actual.txt || exit 1
}

test_opcode disarm_loadstore f83c28be31c46aafa0353ff9b18141787a8db6ff
test_opcode disarm_bl1 a9b0b5b23f47886c4643435871c27d9ba07a8b2f
test_opcode disarm_cmp 291a957d32036f4dbdc4710f52230720230427bf
test_opcode disarm_mov 6e1caebf513b3726b0650674842ae1dbc2513b19
test_opcode disarm_arithmetic 80f27b8d04f4e752abe1543896b7746488df1fe8
