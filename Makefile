#############################################################################
# Makefile for building: armv8bin
# Generated by hand from a qmake template
#############################################################################

####### Compiler, tools and options

AS	= aarch64-linux-gnu-as
ASFLAGS = -mverbose-error
LD	= aarch64-linux-gnu-ld
LDFLAGS = -T src/linker.ld
####### Files

TARGET = armv8bin
HEADERS 	= include/macros.s \
	 	  include/globals.s \
		  include/fcntl.s

SOURCES       = src/main.s \
		src/debug.s \
		src/stdio.s \
		src/string.s \
		src/stdlib.s \
		src/mem.s \
		src/linuxsys.s

OBJECTS       = src/main.o \
		src/debug.o \
		src/stdio.o \
		src/string.o \
		src/stdlib.o \
		src/mem.o \
		src/linuxsys.o

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LD) $(LDFLAGS) -o $(TARGET) $(OBJECTS)

clean: 
	rm -f $(OBJECTS)
	rm -f $(TARGET)

####### Compile

main.o: src/main.s $(HEADERS)
	$(AS) $(ASFLAGS) -o @ src/main.s

stdio.o: src/stdio.s $(HEADERS)
	$(AS) $(ASFLAGS) -o @ src/stdio.s

debug.o: src/debug.s $(HEADERS)
	$(AS) $(ASFLAGS) -o @ src/debug.s

string.o: src/string.s $(HEADERS)
	$(AS) $(ASFLAGS) -o @ src/string.s

stdlib.o: src/stdlib.s $(HEADERS)
	$(AS) $(ASFLAGS) -o @ src/stdlib.s

mem.o: src/mem.s $(HEADERS)
	$(AS) $(ASFLAGS) -o @ src/mem.s

linuxsys.o: src/linuxsys.s $(HEADERS)
	$(AS) $(ASFLAGS) -o @ src/linuxsys.s

####### Install

install:   FORCE
uninstall:   FORCE
FORCE:
run:	linux-run

linux-run:	$(TARGET)
	@echo running in linux usermode. See that write branches to write_linux
	@qemu-aarch64 -L / $(TARGET)

system-run:	$(TARGET)
	@echo running in full system emulation mode. See that write branches to puts
	qemu-system-aarch64 -machine virt -cpu cortex-a57 -nographic -smp 1 -m 2 -kernel armv8bin  --append "console=ttyAMA0"
